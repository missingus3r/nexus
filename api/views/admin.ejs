<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="/css/style.css">
    <style>
        .dashboard-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
            margin: 2rem 0;
        }

        .stat-card {
            background: white;
            padding: 1.5rem;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            text-align: center;
        }

        .stat-card h3 {
            color: var(--text-secondary);
            font-size: 0.875rem;
            font-weight: 500;
            margin-bottom: 0.5rem;
            text-transform: uppercase;
        }

        .stat-card .value {
            font-size: 2.5rem;
            font-weight: bold;
            color: var(--primary-color);
            margin-bottom: 0.5rem;
        }

        .stat-card .subtitle {
            color: var(--text-secondary);
            font-size: 0.875rem;
        }

        .stat-card.success .value {
            color: var(--success-color);
        }

        .stat-card.warning .value {
            color: var(--warning-color);
        }

        .stat-card.danger .value {
            color: var(--danger-color);
        }

        .admin-header {
            background: linear-gradient(135deg, var(--primary-color), #1565c0);
            color: white;
            padding: 2rem;
            border-radius: 8px;
            margin-bottom: 2rem;
        }

        .admin-header h1 {
            margin: 0;
            font-size: 2rem;
        }

        .admin-header p {
            margin: 0.5rem 0 0 0;
            opacity: 0.9;
        }

        .loading {
            text-align: center;
            padding: 3rem;
            color: var(--text-secondary);
        }

        .recent-activity {
            background: white;
            padding: 1.5rem;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            margin-top: 2rem;
        }

        .recent-activity h2 {
            margin-top: 0;
            color: var(--primary-color);
        }

        .activity-item {
            padding: 1rem;
            border-left: 3px solid var(--primary-color);
            margin-bottom: 1rem;
            background: var(--background);
            border-radius: 4px;
        }

        .activity-item .time {
            color: var(--text-secondary);
            font-size: 0.875rem;
        }

        .news-controls {
            background: white;
            padding: 1.5rem;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            margin-top: 2rem;
        }

        .news-controls h2 {
            margin-top: 0;
            color: var(--primary-color);
        }

        .control-group {
            margin-bottom: 1.5rem;
        }

        .control-group label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
        }

        .control-group input[type="text"] {
            width: 100%;
            padding: 0.5rem;
            border: 1px solid var(--border-color);
            border-radius: 4px;
            font-size: 0.875rem;
        }

        .control-group small {
            color: var(--text-secondary);
            font-size: 0.75rem;
            display: block;
            margin-top: 0.25rem;
        }

        .button-group {
            display: flex;
            gap: 0.5rem;
            flex-wrap: wrap;
        }

        .btn {
            padding: 0.75rem 1.5rem;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 0.875rem;
            font-weight: 500;
            transition: all 0.2s;
        }

        .btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }

        .btn-primary {
            background: var(--primary-color);
            color: white;
        }

        .btn-primary:hover:not(:disabled) {
            background: #1565c0;
        }

        .btn-danger {
            background: var(--danger-color);
            color: white;
        }

        .btn-danger:hover:not(:disabled) {
            background: #c62828;
        }

        .btn-success {
            background: var(--success-color);
            color: white;
        }

        .btn-success:hover:not(:disabled) {
            background: #388e3c;
        }

        .status-message {
            padding: 0.75rem;
            border-radius: 4px;
            margin-top: 1rem;
            display: none;
        }

        .status-message.success {
            background: #e8f5e9;
            color: #2e7d32;
            border-left: 4px solid var(--success-color);
        }

        .status-message.error {
            background: #ffebee;
            color: #c62828;
            border-left: 4px solid var(--danger-color);
        }

        .status-message.info {
            background: #e3f2fd;
            color: #1565c0;
            border-left: 4px solid var(--primary-color);
        }
    </style>
</head>
<body>
    <%- include('partials/header', { page: page, isAuthenticated: isAuthenticated }) %>

    <div class="main-content">
        <div class="container">
            <div class="admin-header">
                <h1>Panel de Administraci√≥n</h1>
                <p>Vista general de estad√≠sticas y m√©tricas de la plataforma</p>
            </div>

            <div id="statsContainer" class="loading">
                <p>Cargando estad√≠sticas...</p>
            </div>

            <!-- News Controls -->
            <div class="news-controls">
                <h2>üì∞ Control de Noticias RSS</h2>

                <div class="control-group">
                    <p style="color: var(--text-secondary); margin: 0;">
                        Las noticias se filtran autom√°ticamente por palabras clave de seguridad configuradas en el sistema.
                        Solo se indexar√°n noticias relacionadas con: homicidio, rapi√±a, hurto, violencia, narcotr√°fico, etc.
                    </p>
                </div>

                <div class="button-group">
                    <button class="btn btn-primary" onclick="loadNews()" id="loadNewsBtn">
                        üì• Cargar Noticias de Seguridad
                    </button>
                    <button class="btn btn-danger" onclick="clearNews()" id="clearNewsBtn">
                        üóëÔ∏è Limpiar Todas las Noticias
                    </button>
                </div>

                <div id="newsStatus" class="status-message"></div>
            </div>
        </div>
    </div>

    <%- include('partials/footer') %>

    <script>
        document.addEventListener('DOMContentLoaded', loadStats);

        async function loadStats() {
            try {
                const response = await fetch('/api/admin/stats');
                const stats = await response.json();

                if (!response.ok) {
                    throw new Error(stats.error || 'Error al cargar estad√≠sticas');
                }

                displayStats(stats);
            } catch (error) {
                console.error('Error loading stats:', error);
                document.getElementById('statsContainer').innerHTML = `
                    <div class="text-center" style="padding: 3rem;">
                        <p style="color: var(--danger-color);">Error al cargar estad√≠sticas: ${error.message}</p>
                    </div>
                `;
            }
        }

        function displayStats(stats) {
            const container = document.getElementById('statsContainer');

            container.innerHTML = `
                <div class="dashboard-grid">
                    <div class="stat-card">
                        <h3>Total Incidentes</h3>
                        <div class="value">${stats.totalIncidents || 0}</div>
                        <div class="subtitle">Reportes totales</div>
                    </div>

                    <div class="stat-card success">
                        <h3>Incidentes Hoy</h3>
                        <div class="value">${stats.incidentsToday || 0}</div>
                        <div class="subtitle">√öltimas 24 horas</div>
                    </div>

                    <div class="stat-card">
                        <h3>Usuarios Registrados</h3>
                        <div class="value">${stats.totalUsers || 0}</div>
                        <div class="subtitle">Cuentas activas</div>
                    </div>

                    <div class="stat-card warning">
                        <h3>Usuarios An√≥nimos</h3>
                        <div class="value">${stats.guestUsers || 0}</div>
                        <div class="subtitle">Sessions activas</div>
                    </div>

                    <div class="stat-card">
                        <h3>Total Noticias</h3>
                        <div class="value">${stats.totalNews || 0}</div>
                        <div class="subtitle">Noticias indexadas</div>
                    </div>

                    <div class="stat-card success">
                        <h3>P√°ginas Visitadas</h3>
                        <div class="value">${stats.totalPageViews || 0}</div>
                        <div class="subtitle">Total de vistas</div>
                    </div>
                </div>

                <div class="dashboard-grid" style="margin-top: 2rem;">
                    <div class="stat-card">
                        <h3>Incidentes por Tipo</h3>
                        <div style="font-size: 0.875rem; margin-top: 1rem;">
                            ${stats.incidentsByType ? Object.entries(stats.incidentsByType).map(([type, count]) => `
                                <div style="display: flex; justify-content: space-between; padding: 0.5rem 0; border-bottom: 1px solid var(--background);">
                                    <span>${type}</span>
                                    <strong>${count}</strong>
                                </div>
                            `).join('') : '<p>Sin datos</p>'}
                        </div>
                    </div>

                    <div class="stat-card">
                        <h3>Estado del Sistema</h3>
                        <div style="margin-top: 1rem;">
                            <div style="display: flex; align-items: center; gap: 1rem; padding: 0.5rem 0;">
                                <span style="width: 12px; height: 12px; border-radius: 50%; background: ${stats.mongoConnected ? 'var(--success-color)' : 'var(--danger-color)'}"></span>
                                <span>MongoDB: ${stats.mongoConnected ? 'Conectado' : 'Desconectado'}</span>
                            </div>
                            <div style="display: flex; align-items: center; gap: 1rem; padding: 0.5rem 0;">
                                <span style="width: 12px; height: 12px; border-radius: 50%; background: var(--success-color)"></span>
                                <span>Servidor: Activo</span>
                            </div>
                        </div>
                    </div>
                </div>

                ${stats.recentIncidents && stats.recentIncidents.length > 0 ? `
                    <div class="recent-activity">
                        <h2>Incidentes Recientes</h2>
                        ${stats.recentIncidents.map(incident => `
                            <div class="activity-item">
                                <strong>${incident.type || 'Desconocido'}</strong>
                                <div>${incident.description || 'Sin descripci√≥n'}</div>
                                <div class="time">${new Date(incident.timestamp).toLocaleString('es-UY')}</div>
                            </div>
                        `).join('')}
                    </div>
                ` : ''}
            `;
        }

        // News management functions
        function showStatus(message, type = 'info') {
            const statusEl = document.getElementById('newsStatus');
            statusEl.textContent = message;
            statusEl.className = `status-message ${type}`;
            statusEl.style.display = 'block';

            // Auto-hide after 10 seconds for success messages
            if (type === 'success' || type === 'info') {
                setTimeout(() => {
                    statusEl.style.display = 'none';
                }, 10000);
            }
        }

        function disableButtons(disabled) {
            document.getElementById('loadNewsBtn').disabled = disabled;
            document.getElementById('clearNewsBtn').disabled = disabled;
        }

        async function loadNews() {
            const confirmMsg = '¬øCargar noticias de seguridad de los feeds RSS?\n\nSolo se indexar√°n noticias relacionadas con seguridad (homicidio, rapi√±a, hurto, etc.).\n\nEsto puede tomar varios minutos.';

            if (!confirm(confirmMsg)) return;

            disableButtons(true);
            showStatus('Iniciando carga de noticias de seguridad... Este proceso puede tomar varios minutos.', 'info');

            try {
                const response = await fetch('/api/admin/news/ingest', { method: 'POST' });
                const data = await response.json();

                if (response.ok) {
                    showStatus(data.message + ' Revisa los logs del servidor para ver el progreso.', 'success');
                    // Reload stats after a delay
                    setTimeout(loadStats, 5000);
                } else {
                    showStatus('Error: ' + (data.error || 'No se pudo iniciar la carga'), 'error');
                }
            } catch (error) {
                console.error('Error:', error);
                showStatus('Error al cargar noticias: ' + error.message, 'error');
            } finally {
                disableButtons(false);
            }
        }

        async function clearNews() {
            if (!confirm('‚ö†Ô∏è ¬øEst√°s seguro de eliminar TODAS las noticias?\n\nEsta acci√≥n no se puede deshacer.')) {
                return;
            }

            if (!confirm('‚ö†Ô∏è‚ö†Ô∏è CONFIRMACI√ìN FINAL ‚ö†Ô∏è‚ö†Ô∏è\n\nSe eliminar√°n permanentemente todas las noticias de la base de datos.\n\n¬øContinuar?')) {
                return;
            }

            disableButtons(true);
            showStatus('Eliminando todas las noticias...', 'info');

            try {
                const response = await fetch('/api/admin/news/clear', { method: 'DELETE' });
                const data = await response.json();

                if (response.ok) {
                    showStatus(`‚úì ${data.deletedCount} noticias eliminadas exitosamente`, 'success');
                    loadStats(); // Reload stats
                } else {
                    showStatus('Error: ' + (data.error || 'No se pudieron eliminar las noticias'), 'error');
                }
            } catch (error) {
                console.error('Error:', error);
                showStatus('Error al eliminar noticias: ' + error.message, 'error');
            } finally {
                disableButtons(false);
            }
        }
    </script>
</body>
</html>
